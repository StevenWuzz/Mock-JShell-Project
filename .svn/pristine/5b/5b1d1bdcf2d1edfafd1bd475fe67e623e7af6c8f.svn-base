package commands;

import inputOutput.StandardOutput;

import java.util.HashMap;

public abstract class Command {

  private static HashMap<String, String> syntaxToCommand = new HashMap<String, String>();
  private static boolean innit = false;

  /**
   * executes the main function of the command
   *
   * @param args
   * @return output of the command
   */
  protected abstract String execute(String[] args);

  private static void innit() {
    syntaxToCommand.put("ls", "List");
    syntaxToCommand.put("history", "History");
    syntaxToCommand.put("exit", "Exit");
    syntaxToCommand.put("mkdir", "Mkdir");
    syntaxToCommand.put("popd", "PopDirectory");
    syntaxToCommand.put("pushd", "PushDirectory");
    syntaxToCommand.put("pwd", "Pwd");
    innit = true;
  }

  /**
   * Using the toString to provide documentation of the command
   *
   * @return command documentation
   */
  public abstract String toString();

  public static void runCommand(String[] args) {
    if (!innit) {
      innit();
    }
    try {
      String cmd = syntaxToCommand.get(args[0]);
      if (cmd==null) throw new InstantiationException();
      Class commandClass = Class.forName("commands." + cmd);
      Command command = (Command) commandClass.newInstance();
      String msg=command.execute(args);
      if(!msg.equals("")) StandardOutput.output(msg);
    } catch (Exception e) {
      StandardOutput.perror(e.toString());
    }

  }

}
