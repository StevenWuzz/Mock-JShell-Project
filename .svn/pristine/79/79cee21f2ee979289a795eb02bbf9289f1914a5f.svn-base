// **********************************************************
// Assignment2:
// Student1: Stephen Guo
// UTORID user_name: guostep2
// UT Student #: 1006313231
// Author: Stephen Guo
//
// Student2: Steven Hans Limantoro
// UTORID user_name: limantor
// UT Student #: 1005780861
// Author: Steven Hans Limantoro
//
// Student3: Vignesh Nanthakumar
// UTORID user_name: nantha33
// UT Student #: 1006278948
// Author: Vignesh Nanthakumar
//
// Student4: Krutik Shah
// UTORID user_name: shahkr10
// UT Student #: 10062135626
// Author: Krutik Shah
//
//
// Honor Code: I pledge that this program represents my own
// program code and that I have coded on my own. I received
// help from no one in designing and debugging my program.
// I have also read the plagiarism section in the course info
// sheet of CSC B07 and understand the consequences.
// *********************************************************
package commands;

import inputOutput.Error;

public class Manual extends Command {

  @Override
  protected String execute(String[] args) {
    
    Command cmd;
    String output = "";
    
    if (args.length == 2) {
      
      if (Error.isCommand(args[1])) {
        cmd = Command.getCommand(args[1]);
        return cmd.toString();
      }
      
      return "Invalid Command";
    }
    
    for (int i = 1; i < args.length; i++) {
      
      if (!Error.isCommand(args[i])) {
        output += args[i] + "is an invalid Command";
        return output;
      }
      
      cmd = Command.getCommand(args[i]);
      
      output += args[i] + ":\n";
      output += cmd.toString() + "\n";
      
    }
    
    if (output.equals("")) {
      return output;
    }
    
    return output.substring(0, output.length() - 1);
  }

  @Override
  public String toString() {
    return "man CMD [CMD2 ...]\n\n\tPrint documentation for CMD (s)";
  }
}
