// **********************************************************
// Assignment2:
// Student1: Stephen Guo
// UTORID user_name: guostep2
// UT Student #: 1006313231
// Author: Stephen Guo
//
// Student2: Steven Hans Limantoro
// UTORID user_name: limantor
// UT Student #: 1005780861
// Author: Steven Hans Limantoro
//
// Student3: Vignesh Nanthakumar
// UTORID user_name: nantha33
// UT Student #: 1006278948
// Author: Vignesh Nanthakumar
//
// Student4: Krutik Shah
// UTORID user_name: shahkr10
// UT Student #: 10062135626
// Author: Krutik Shah
//
//
// Honor Code: I pledge that this program represents my own
// program code and that I have coded on my own. I received
// help from no one in designing and debugging my program.
// I have also read the plagiarism section in the course info
// sheet of CSC B07 and understand the consequences.
// *********************************************************
package inputOutput;

import commands.Command;
import commands.History;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

/**
 * This class has methods that parses an input from the JShell
 */
public class StandardInput {

  // Debugging variable ////////////////////////////////////////////////////////////////////////////
  public static boolean initalized = false;
  // Debugging variable ////////////////////////////////////////////////////////////////////////////

  
  
  /**
   * This method will add spaces between a string and ">>" or ">" parameters if they exist.
   * 
   * @param user input 
   * @return same input with spaces inserted between strings and ">>" or ">" if they exist
   */
  private static String addSpaces (String input) {
    String newString = "", inputAfterString = "";
    
    // Checks if there's a string in the input
    int firstOccurrance = input.indexOf('"');
    int lastOccurrance = input.lastIndexOf('"');
    
    if (firstOccurrance == -1 || firstOccurrance == lastOccurrance) {
      return input;
    }
    
    // Splits string into 2 parts. The part before the string, and the part after
    newString += input.substring(0, firstOccurrance);
    newString += input.substring(firstOccurrance, lastOccurrance + 1) + " ";
    inputAfterString = input.substring(lastOccurrance + 1);
    
    // Checks if ">" or ">>" exists, and adds spaces between them
    for (int i = 0; i < inputAfterString.length()-1; i++) {
      if (inputAfterString.charAt(i) == '>') {
        if (inputAfterString.charAt(i+1) == '>') {
          return newString + ">> " + inputAfterString.substring(i+2);
        }
        return newString + "> " + inputAfterString.substring(i+1);
      }
      newString += inputAfterString.charAt(i);
    }
    return newString + inputAfterString;
  }

  /**
   * This method will split up an input by whitespaces, and will run command if the input is
   * validated by Error.java
   *
   * @param input from the JShell
   */
  public static void parse(String input) {

    // Adds input to history
    History.addInputHistory(input);
    
    // Adds spaces into the input if needed
    input = addSpaces(input);

    // Splits input into commands and arguments
    String arguments[] = input.trim().split("\\s+");
    
    // For testing and debugging ///////////////////////////////////////////////////////////////////
    if (input.contentEquals("init") && !initalized) {
      Command.runCommand(new String[]{"mkdir", "folder1", "folder2"});
      Command.runCommand(new String[]{"echo", "\"apple orange\"", ">", "file1"});
      Command.runCommand(new String[]{"echo", "\"iPhone 12 Max\"", ">", "file2"});
      Command.runCommand(new String[]{"cd", "folder1"});
      Command.runCommand(new String[]{"mkdir", "folder3", "folder4"});
      Command.runCommand(new String[]{"echo", "\"I love anime!\"", ">", "file3"});
      Command.runCommand(new String[]{"echo", "\"4th file...\"", ">", "file4"});
      Command.runCommand(new String[]{"cd", "folder3"});
      Command.runCommand(new String[]{"echo", "\"This shell is amazin!\"", ">", "file5"});
      Command.runCommand(new String[]{"cd", "/"});
      Command.runCommand(new String[]{"cd", "folder2"});
      Command.runCommand(new String[]{"echo", "\"ayaya!\"", ">", "animeFile"});
      Command.runCommand(new String[]{"cd", "/"});
      System.out.println("Created new file system!");
      initalized = true;
      return;
    }
    // For testing and debugging ///////////////////////////////////////////////////////////////////

    // Executes command if validated
    if (Error.checkSyntax(arguments)) {
      Command.runCommand(arguments);
    }
  }
}
